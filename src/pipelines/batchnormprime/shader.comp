#version 450
layout(set = 0, binding = 0) uniform UniformBuffer {
    uint max_row_index;
    uint max_column_index;
};

layout(set = 0, binding = 1) buffer Gamma {
    float[] gamma;
};

layout(set = 0, binding = 2) buffer BatchVar {
    float[] batchvar;
};

layout(set = 0, binding = 3) buffer Target {
    float[] target;
};

float epsilon = 0.00000001;

float get_element(uint index_of_row, uint index_of_column) {
    //Gamma: row_size
    //BatchMean: row_size
    return gamma[index_of_row]/sqrt(batchvar[index_of_row] + epsilon); 
}

void main() {
    uint index_of_row = gl_GlobalInvocationID.x;
    uint index_of_column = gl_GlobalInvocationID.y;
    target[index_of_column * max_row_index + index_of_row] = get_element(index_of_row, index_of_column);
    //target: row_size x column_size
}

