#version 450
layout(set = 0, binding = 0) uniform UniformBuffer {
    uint max_row_index;
    uint max_column_index;
};

layout(set = 0, binding = 1) buffer Matrix {
    float[] matrix;
};

layout(set = 0, binding = 2) buffer Target {
    float[] target;
};

float get_element(uint index_of_row) {
    //Matrix: row_size x column_size
    float accumulator = 0.0;
    for(uint index_of_column = 0; index_of_column < max_column_index; index_of_column++){
        accumulator += matrix[index_of_column * max_row_index + index_of_row];
    }
    return accumulator;
}

void main() {
    uint index_of_row = gl_GlobalInvocationID.x;
    target[index_of_row] = get_element(index_of_row);
    //target: row_size
}
